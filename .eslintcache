[{"/Users/bee/Projects/taboo/src/index.js":"1","/Users/bee/Projects/taboo/src/App.js":"2","/Users/bee/Projects/taboo/src/reportWebVitals.js":"3","/Users/bee/Projects/taboo/src/lib/firebase.js":"4","/Users/bee/Projects/taboo/src/Components/post.jsx":"5","/Users/bee/Projects/taboo/src/Components/navbar.jsx":"6","/Users/bee/Projects/taboo/src/Components/addpost.jsx":"7","/Users/bee/Projects/taboo/src/Components/voteBtns.jsx":"8"},{"size":595,"mtime":1607393652807,"results":"9","hashOfConfig":"10"},{"size":1770,"mtime":1607396280987,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607392518066,"results":"12","hashOfConfig":"10"},{"size":594,"mtime":1607392809066,"results":"13","hashOfConfig":"10"},{"size":404,"mtime":1607395117960,"results":"14","hashOfConfig":"10"},{"size":443,"mtime":1607393795350,"results":"15","hashOfConfig":"10"},{"size":2085,"mtime":1607393791178,"results":"16","hashOfConfig":"10"},{"size":1685,"mtime":1607395182358,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1medsj5",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},"/Users/bee/Projects/taboo/src/index.js",[],"/Users/bee/Projects/taboo/src/App.js",["37","38"],"/Users/bee/Projects/taboo/src/reportWebVitals.js",[],["39","40"],"/Users/bee/Projects/taboo/src/lib/firebase.js",[],"/Users/bee/Projects/taboo/src/Components/post.jsx",[],"/Users/bee/Projects/taboo/src/Components/navbar.jsx",[],"/Users/bee/Projects/taboo/src/Components/addpost.jsx",["41","42"],"import {\n    Button,\n    FormControl,\n    FormLabel,\n    Textarea,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    HStack,\n    useDisclosure,\n  } from \"@chakra-ui/react\";\n  import React, { useState, useEffect } from \"react\";\n  import db from \"../lib/firebase\";\n\n  const AddNewPost = () => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [title, setTitle] = useState(\"\");\n    const [isSaving, setSaving] = useState(false);\n\n    const handleSubmit = async () => {\n      const date = new Date();\n\n      await db.collection(\"posts\").add({\n        title,\n        upVotesCount: 0,\n        downVotesCount: 0,\n        createdAt: date.toUTCString(),\n        updatedAt: date.toUTCString(),\n      });\n\n      onClose();\n      setTitle(\"\");\n    };\n\n    return (\n      <>\n        <Button onClick={onOpen} colorScheme=\"blue\">\n          Add new post\n        </Button>\n\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\n          <ModalOverlay>\n            <ModalContent>\n              <ModalHeader>Add new post</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <FormControl id=\"post-title\">\n                  <FormLabel>Post title</FormLabel>\n                  <Textarea\n                    type=\"post-title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <HStack spacing={4}>\n                  <Button onClick={onClose}>Close</Button>\n                  <Button\n                    onClick={handleSubmit}\n                    colorScheme=\"blue\"\n                    disabled={!title.trim()}\n                    isLoading={isSaving}\n                  >\n                    Save\n                  </Button>\n                </HStack>\n              </ModalFooter>\n            </ModalContent>\n          </ModalOverlay>\n        </Modal>\n      </>\n    );\n  };\n\n  export default AddNewPost;\n","/Users/bee/Projects/taboo/src/Components/voteBtns.jsx",["43","44","45","46","47"],"import { IconButton, Text, VStack } from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { FiArrowDown, FiArrowUp } from \"react-icons/fi\";\nimport db from \"../lib/firebase\";\n\nconst VoteButtons = ({ post }) => {\n\n    const [isVoting, setVoting] = useState(false);\n    const [votedPosts, setVotedPosts] = useState([]);\n\n\n    const handleClick = async (type) => {\n\n        let upVotesCount = post.upVotesCount;\n        let downVotesCount = post.downVotesCount;\n\n        const date = new Date();\n\n        if (type === \"upvote\") {\n        upVotesCount = upVotesCount + 1;\n        } else {\n        downVotesCount = downVotesCount + 1;\n        }\n\n        await db.collection(\"posts\").doc(post.id).set({\n        title: post.title,\n        upVotesCount,\n        downVotesCount,\n        createdAt: post.createdAt,\n        updatedAt: date.toUTCString(),\n        });\n    };\n\n    return (\n        <>\n        <VStack>\n            <IconButton\n            size=\"lg\"\n            colorScheme=\"blue\"\n            aria-label=\"Upvote\"\n            icon={<FiArrowUp />}\n            onClick={() => handleClick(\"upvote\")}\n            />\n            <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n            {post.upVotesCount}\n            </Text>\n        </VStack>\n        <VStack>\n            <IconButton\n            size=\"lg\"\n            colorScheme=\"red\"\n            aria-label=\"Downvote\"\n            icon={<FiArrowDown />}\n            onClick={() => handleClick(\"downvote\")}\n            />\n            <Text bg=\"gray.100\" rounded=\"md\" w=\"100%\" p={1}>\n            {post.downVotesCount}\n            </Text>\n        </VStack>\n        </>\n    );\n};\n\nexport default VoteButtons;\n",{"ruleId":"48","severity":1,"message":"49","line":1,"column":21,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":34},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"48","severity":1,"message":"57","line":16,"column":29,"nodeType":"50","messageId":"51","endLine":16,"endColumn":38},{"ruleId":"48","severity":1,"message":"58","line":22,"column":22,"nodeType":"50","messageId":"51","endLine":22,"endColumn":31},{"ruleId":"48","severity":1,"message":"57","line":2,"column":27,"nodeType":"50","messageId":"51","endLine":2,"endColumn":36},{"ruleId":"48","severity":1,"message":"59","line":8,"column":12,"nodeType":"50","messageId":"51","endLine":8,"endColumn":20},{"ruleId":"48","severity":1,"message":"60","line":8,"column":22,"nodeType":"50","messageId":"51","endLine":8,"endColumn":31},{"ruleId":"48","severity":1,"message":"61","line":9,"column":12,"nodeType":"50","messageId":"51","endLine":9,"endColumn":22},{"ruleId":"48","severity":1,"message":"62","line":9,"column":24,"nodeType":"50","messageId":"51","endLine":9,"endColumn":37},"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'useEffect' is defined but never used.","'setSaving' is assigned a value but never used.","'isVoting' is assigned a value but never used.","'setVoting' is assigned a value but never used.","'votedPosts' is assigned a value but never used.","'setVotedPosts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]